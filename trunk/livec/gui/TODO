* KeysReflectionWidget -> gui/

* Rename FunctionTypeWidget->FunctionPostTypeWidget
         PtrTypeWidget->PtrPostTypeWidget
         ArrayTypeWidget->ArrayPostTypeWidget

* Use a common base for Proxy widgets instead of inheriting Stack?

* add the declarations to the top of module widget:
  * emphasize them when stuff using them is in focus
  * option to remove them
  * how to have an observable find_set_of_types_used?

* how to have an observable find_basetype?

* Widgets should have a destroy?

* Add a visit() to Widget so it can visit entire hierarchy, then use
   it to search. Have Box return a BoxChildren object mapping keys of
   children to visit() results, and other widgets just return whatever
   they want.

* Observable List needs a replace_item too

* Change Groups to have the modifiers per-key and not per-group

* TextEdit should take an observable mutable string, not get/set

* Viewer configuration should be stored in a ConfigParser config file?

* Folding

* Have Widget allocate some space for its own rect?

* figure out how to expose where a node is coming from (stack: int
   argc, global: bleh)

* observable.ValueProxy and use that so made child widgets can be
   replaced when they should be.

* Document the observable interfaces.

* How to manage UNDOs?

BUGS:
* Building all the widgets for the model is taking way too long
