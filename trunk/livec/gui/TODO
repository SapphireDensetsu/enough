* Module subclasses block.
* Variables defined in block, refer to block they're defined in.
* 
  

* figure out how to expose where a node is coming from (stack: int
   argc, global: bleh)

* add the declarations to the top of module widget:
  * emphasize them when stuff using them is in focus
  * option to remove them
  * how to have an observable find_set_of_types_used?

* Dynamicism of the type widgets
* how to have an observable find_basetype?

Multichildren:
  * Select multichildren -> Allow to put them in subblock
  * Allow subblocks to be converted to functions
  * Allow to play with inline-ness of called functions
  * Consider uniting Function/Block

Simon:
  * Only expose register_group
  * Group of one for all keys
  * Group collects (event_type, modifier, key)
  * Hafifa Box
    * Should anyone stick stuff in parenting_keymap?
    * Should parenting_keymap be set when no children exist?

Later:
* Viewer configuration should be stored in a ConfigParser config file?
* Command usage statistics

Documentation:
* Document the observable interfaces.

Questions:
* How to manage searches/hierarchy walks?
* How to manage UNDOs?
* Should widgets have a destroy()?

BUGS:
* Building all the widgets for the model is taking way too long
* Performance in general

Cleanups:
* Observable List needs a replace_item too
* TextEdit should take an observable mutable string, not get/set
