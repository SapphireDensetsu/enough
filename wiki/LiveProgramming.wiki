#summary Programming with live code instead of text

== Main references ==
 # Ferdinand de Saussure (1916). _The Course of General Linguistics (Cours de linguistique générale)_
 # _[http://en.wikipedia.org/w/index.php?title=Semantics&oldid=107257033 Semantics]_ in Wikipedia
 # _[http://alarmingdevelopment.org/?p=5 Manifesto of the Programmer Liberation Front]_ Jonathan Edwards (June 16, 2004)

=== Additional resources ===
 * [http://www.alice.org Alice], for an interesting demo watch the first one on this page: http://www.alice.org/Alice_movies/
 * [http://www.ni.com/labview/ LabView], a tool for "virtual instrumentation", including an graphical interface for "block programming" by connecting outputs to inputs. See the [http://www.ni.com/labview/demos.htm Demos]

= Introduction =
Before we start, it is recommended to read about [SyntaxAndSemantics Syntax and Semantics].

== Limitations of syntax ==
The external relation between syntax and meaning has a price. There are several limitations and problems.

=== Syntax that can't express semantics ===
Sometimes the syntax imposes restrictions that the semantics don't, causing us to think of things in a more restricted way. A language with this problem is not a good language. We define both syntax _and_ semantics as part of the language, and expect them to match.

=== Syntax that is hard to read/use ===
In some languages (such as written French and Perl) the syntax often causes frustration. In French, the syntactical expression of single words (spelling) is very hard to learn for a newcomer. So is the French syntactical representation of decimal numbers. In Perl, the problem is that the syntax allows to many different ways to specify a single meaning. Of course one can write completely comprehensible programs in perl. But perl allows otherwise, and soon enough this happened ([http://www.perlmonks.org/index.pl?node_id=45213 Perl Camel] by [http://www.Erudil.com Stephen B. Jenkins])