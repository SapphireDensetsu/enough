#summary Explanation of Unified Interface

= Introduction =
As explained by LiveProgramming, the developer's and user's interface to develop and interact with the program are unified into one interface.
This unification has several major implications:
  * It allows users to become programmers without the fuss of having to learn a complicated syntax and development techniques, and in effect empowers the user to become as powerful in manipulating the program as the developer is.
  * It simplifies the user interface and environment.
  * It unburdens developers from adding scripting and features into their programs that merely attempt to give simple programming powers to the users.

= Users become programmers =
Today, programs are treated as black boxes with a rigid interface by users. They cannot look inside to see how they work, and they can definitely not modify these programs. With Open Source programs, the users can legally see and modify the programs, but for that they are required to learn complicated programming languages, conventions and libraries.
With LiveProgramming, a program still *can* be treated as an input/output black box, but now the users can dig into the program with the same graphical interface that they use the program.
They can also look at how any of the programs they use work to learn how they work. If a user wants to know how MP3 decoding works, he can simply "zoom in" on the implementation of the "MP3 decoder" and view the algorithms.

= Users know how the programs they use work =