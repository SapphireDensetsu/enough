#summary Rules and definitions for deltas

= Basic Definitions =

 * *V* is the group of all values.
 * *D* is the group of all deltas.
 * *A,,d,V1,,* is a function, *V1* -> *V2* where *V1* and *V2* are subsets of *V*. It is called the _apply d_ function.

In the following, *V1*, *V2*, etc. are subsets of *V*.

 * *Applicable*: A delta _d_ is *applicable* to a value _v_ if and only if there is defined a function *A,,d,V1,,* where _v_ belongs to *V1.
 * *Delta support*: The *delta support* of *V1*, is the group of all deltas _d_ such that _d_ is applicable to at least one value in *V1*.
 * *Value class*: A *value class* in *V1* is a subset of *V1*, containing values _v_, for which there exists a delta _d_ that is applicable to _v_. In other words, a value class is a group of values that have a common applicable delta.
    * Example: the group of all `Dict`s is a value class (because they have a common applicable delta, in fact they have several).

 * *Delta path*: Given _v,,1,,_ belongs to *V1*, a *delta path* from _v,,1,,_ to _v,,2,,_ is an ordered sequence of deltas (_d,,1,,_, _d,,2,,_, ..., _d,,n,,), such that A,,dn,V1,,(A,,d(n-1),V1,,(...(A,,d1,V1,,(_v,,1,,_)))..)) = _v,,2,,_

 * *Delta distance*: the distance between two values _v,,1,,_ and _v,,2,,_ is the 