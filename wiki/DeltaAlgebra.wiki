#summary Formal definitions for deltas

*TODO*: The domains used in some of these definitions/theorems are wrong.

= Introduction =
The *Delta Algebra* contains the following primitives:
 * Values, which are immutable entities on which delta apply functions operate.
 * Deltas, which are objects that are associated with delta apply functions.
 * Delta apply functions, which are functions that map values to values.

The relation between this formalism and the practical deltas used in the Enough PackageLibrary is not well defined. This formalism was created mainly for amusement, but it may find future applications in (possibly automatic) formal verification of a system that uses the delta concept.

= Basic Definitions =

 * *V* is the set of all values.
 * *D* is the set of all deltas.
 * _A,,d,V1,,_ is a function, *V1* -> *V2* where *V1* and *V2* are subsets of *V*. It is called the _apply d in V1_ function.
 * *Applicable*: A delta _d_ is *applicable* to a value _v_ if and only if there is defined a function _A,,d,V1,,_ where _v_ belongs to *V1*.
 * *Domain of a delta*: the domain of a delta _d_ is the set of all _v_'s such that _d_ is applicable to _v_.
 * The *Common domain* of a set of deltas *D1* (a subset of *D*), is the intersection of all the domains of each _d_ in *D1*.

 * *Equality* (=): For every pair of deltas _d,,1,,_, _d,,2,,_, it is said that _d,,1,,_ = _d,,2,,_ _in *V1*_ (they are _*equal* in *V1*_) if and only if for evey _v_ in *V1*: _A,,d1,V1,,_(_v_) = _A,,d2,V1,,_(_v_) (that is, if the delta apply functions have equal values for a given _v_).
    * *Total equality*: If _d,,1,,_ = _d,,2,,_ in the domain of _d,,1,,_, and the domain of _d,,1,,_ is also the domain of _d,,2,,_, then _d,,1,,_ and _d,,2,,_ are *totally equal*, that is - they are indistinguishable and can be regarded as the same delta.

 * *Addition* (+):
    * Assume a pair of deltas _d,,1,,_, _d,,2,,_ such that the range of _A,,d1,V1,,_ is a subset of the domain of _d,,2,,_ (that is: _d,,2,,_ is applicable to _A,,d1,V1,,_(_v_) for all _v_ in *V1*. Or in other words, _A,,d1,V1,,_ is at least _into_ the domain of _d,,2,,_).
    * Then the *addition* _d,,1,,_+_d,,2,,_ is a delta, that is defined by: _A_,,d1+d2,V1,,(_v_) = _A,,d2,V2,,_(_A,,d1,V1,,_(_v_)). Another name for addition is *combination*.
    * *Theorem a1*: _Associativity of addition_: _d,,1,,_ + (_d,,2,,_ + _d,,3,,_) = (_d,,1,,_ + _d,,2,,_) + _d,,3,,_. 
      * *Proof*:  _d,,1,,_ + (_d,,2,,_ + _d,,3,,_) means _A,,d2+d3,V1,,_(_A,,d1,V1,,_(_v_)) = _A,,d3,V1,,_(_A,,d2,V1,,_(_A,,d1,V1,,_(_v_))) = _A,,d3,V1,,_(_A,,d1+d2,V1,,_(_v_)) which means (_d,,1,,_ + _d,,2,,_) + _d,,3,,_. Therefore the two sides are equivalent, and + is associative.

 * *Empty delta*: A delta _d_ is an _empty delta_ if for all _v_ in *V*: _A,,d,V,,_(_v_) = _v_ (by definition). We define one such delta and call it _d,,0,,_ (_*the* empty delta_).
    * *Theorem e1*: _Uniqueness of the empty delta_: _there is exactly one delta that is an empty delta_. 
      * *Proof*: If _d,,1,,_ is an empty delta, then _A,,d1,V,,_(_v_) = _v_ for all _v_, by definition. However, _v_ = _A,,d0,V,,_(_v_) because we have already defined the empty delta _d,,0,,_. Therefore by definition _d,,0,,_ = _d,,1,,_ (totally) and they are the same delta.
    * *Theorem e2*: For every _d_: _d_ + _d,,0,,_ = _d,,0,,_ + _d_ = _d_ in the domain *V1* of _d_. 
      * *Proof*: _d_ + _d,,0,,_ means by definition _A,,d+d0,V1,,_(_v_) = _A,,d0,V1,,_(_A,,d,V1,,_(_v_)) = {by definition of _d,,0,,_} = _A,,d,V1,,_(_v_). Therefore applying _d_ + _d,,0,,_ is the same as applying d, and they are equal. The other order _d,,0,,_ + _d_ = _d_ can be proved in the same way.
    * *Theorem e3*: _d,,1,,_ + _d,,2,,_ = _d,,1,,_ + _d,,3,,_ in *V,,1,,*, if and only if: _d,,2,,_ = _d,,3,,_ in the image of _A,,d1,V1,,_. 
      * *Proof*: 
        # =>: The first equation means that for every _v_ in *V1* (for which we assume that _A,,d1,V1,,_(_v_) is in *V,,2,3,,*): _A,,d2,V2,,_(_A,,d1,V1,,_(_v_)) = _A,,d3,V3,,_(_A,,d1,V1,,_(_v_)). We can name _v,,1,,_ = _A,,d1,V1,,_(_v_), then: _A,,d2,V2,,_(_v,,1,,_) = _A,,d3,V3,,_(_v,,1,,_). By definition this implies that _d,,2,,_ = _d,,3,,_ (in the image of _A,,d1,V1,,).
        # <=: The second equation is: _A,,d2,V2,,_(_v_) = _A,,d3,V3,,_(_v_) in the image of _A,,d1,V1,,. For all _v,,1,,_ in *V1*, there exists _v,,2,,_ = _A,,d1,V1,,_(_v,,1,,_): set _v_ = _v,,2,,_ and we get the first equation.


= Axioms on deltas =
 * *Axiom 1: Negation* (reversal): for every delta _d_ there exists a delta -_d_ such that: _d_ + (-_d_) = _d,,0,,_ in the domain of _d_. -_d_ is called the *reverse* of _d_.
    * Note that by definition, the image of _d_ is the domain of _-d_.
    * *Theorem n1*: _Symmetry of reverse_: If -_d_ is the reverse of _d_, and the image of  _-d_ is the domain of _d_, then _d_ is the reverse of -_d_.
      * *Proof*: _d_ + _-d_ = _d,,0,,_  in the domain of _d_ => {adding both sides to _-d_: using the condition that the image of _-d_ is the domain of _d_  to apply theorem e3} => _-d_ + (_d_ + _-d_) = _-d_ + _d,,0,,_ = {associativity on left, and by definition commutativity with _d,,0,,_ on right} = (_-d_ + _d_) + _-d_ = _d,,0,,_ + _-d_ => {theorem e3} => _-d_ + _d_ = _d,,0,,_.
    * *Theorem n2*: _Uniqueness of reverse_: For every _d_ there exists exactly one reverse. 
      * *Proof*: If _d,,1,,_ is another reverse of _d_, then _d_ + _d,,1,,_ = _d,,0,,_ = _d_ + _-d_ => {theorem e3} => _d,,1,,_ = _-d_.


= More definitions =
 * *Atomic delta*: _d_ is an *atomic delta* if and only if there is no pair (_d,,1,,_, _d,,2,,_) such that _d,,1,,_ + _d,,2,,_ = _d_ in the domain of _d_.
 * *Delta support*: The *delta support* of *V1*, is the set of all deltas _d_ such that _d_ is applicable to at least one value in *V1*.
 * *Common applicable delta* of a set of values, is a delta that is applicable to all values in the set.
 * *Value class*: A *value class* is a set of values with at least one common applicable delta.
    * Example: the set of all `Dict`s is a value class (because they have a common applicable delta, in fact they have several).
 * *Delta path*: A *delta path* from _v,,1,,_ to _v,,2,,_ is any ordered sequence of *atomic* deltas (_d,,1,,_, _d,,2,,_, ..., _d,,n,,_), such that _A,,dn,V1,,(A,,d(n-1),V1,,(...(A,,d1,V1,,(_v,,1,,_)))..))_ = _v,,2,,_.
   * Note that by definition there is a single delta (_d,,1,,_+_d,,2,,_+...+_d,,n,,_) that is the same as the above application of the sequence, but it is not a delta path because it is not atomic.
   * Also, there is an infinite number of arbitrary long delta paths from any value to any value, because we can always add another pair of canceling atomic deltas to the path: (_d_, -_d_).
 * *Length of delta path*: The length of a delta path is the number of deltas in the sequence.
 * *Delta distance*: the delta distance from _v,,1,,_ to _v,,2,,_ is the shortest length of any delta path from _v,,1,,_ to _v,,2,,_.
    * This is written: |_v,,1,,_ - _v,,2,,_|*,,D,,*. 
    * *Theorem dist1*: |_v,,1,,_ - _v,,2,,_|*,,D,,* = |_v,,2,,_ - _v,,1,,_|*,,D,,*.
      * *Proof*: Using the existence of a reverse delta for every delta in the path from _v,,1,,_ to _v,,2,,_, we can always construct a reverse path of the same length. The reverse path can not be shorter, because if there is a way to cancel out deltas on the reverse path, the reverse of the same pair of deltas in the forward path could have also been canceled out.