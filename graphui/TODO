* High priority
  * Persistency (Save/load): Still needs proper file selection
  * Maybe edge text should be given to dot after all, if the edge is
   too short, there is simply no room for the text.
  * Edge font size should decrease when stuff becomes dense and there
   is less room in general.

* UI improvements:
  * Shift+Drag should connect and not unmark multi-selection
  * Proper Scrolling
  * Full keyboard control, focus changing with the mouse only is annoying!

* Expose Dot Features:
  * Play around with attributes such as shape, color, fillcolor, etc.
  * Containing subgraphs in squares (dot supports this) so you can show state groups and do state machines.

What the heck do these mean:
* Add some nice way to use the graph backend in Python (for example, every new node creation or connection calls a callback or something)

Known bugs:
* Make the edge text appear on one side (and not change sides
   randomly)
* undoing after loading, tries to undo stuff from the graph before the
   load, which causes an exception.

Functions to optimize, according to profiling:
* paint_shape (in EdgeWidget) - 18.9% self time
* point_near_polyline (in Point) - 9% self time
* get_current/set_current in moving value - called too many times! we don't need this property
* get rid of the Attr object (especially "verify exists")
  * and also its __getattr__ slows us down
* factorial - called too many times. implement in C and find why called so many times?
* choose - called too many times, like factorial
* bezier calls choose/factorial too many times. (nonrec_point_on_curve)
* rotate_surface
